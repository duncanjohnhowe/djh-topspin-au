/*New version of auto email*/
/*Aim is to put the program defaults into a file, and read that*/
/*Uses 7za.exe command line version from z-zip.org, placed into C:/windows*/
/*Relies on the robocopy command being in windows*/

#include <stdio.h>
#include <inc/sysutil>



char defaultsfile[PATH_MAX]="c:/windows/ed.txt";
char in_data[1023];
char user_id[255];
char password[255];
char log_dir[255];
char zip_dir[255];
char *file_data,*field;
char orig_au[255],proc_au[255];
char email[255];
char status1[127]="emailing";
char zip_cmd_str[1023]="\n";
char email_cmd_str[1023]="\n";
char zip_password[255]="unset";
char body[255]="DO NOT REPLY. Any problems please email nmr-at-ch.cam.ac.uk";
char batfile[PATH_MAX],batcmd[127]="top-copy.bat";
char zip_name[PATH_MAX]="unset";
char pdfname[PATH_MAX]="unset";
char pul[255],nuc1[7];
char directory[PATH_MAX];
char emailedlist[PATH_MAX] = "unset";
char status_string[127]="working";
int finish=0;
int suffix=1;
int ch;
int cmdstatus,orig_expno,i_limit=999,i_exp=1,pdfthere=0,i;

FILE *plist = NULL;
FILE *fdef = NULL;
FILE *fbat = NULL;
FILE *statusprint = NULL;


/*--- Get defaults from the defaults file ----------------------*/
//strcpy( defaultsfile, def_file );
fdef = fopen( defaultsfile, "r" );
rewind(fdef); //go to begining of file
file_data = fgets(in_data, 1023, fdef); //read in file as a continuous string
fclose(fdef); //close the file
//file is open, read data
field = strtok(in_data, ",");
strcpy( user_id,field);
field = strtok(NULL, ",");
sscanf(field, "%s", &password);
field = strtok(NULL, ",");
sscanf(field,"%s", &log_dir);
field = strtok(NULL, ",");
sscanf(field,"%s", &zip_dir);

if (i_argc == 3) {
	strcpy(zip_password,i_argv[2]);
}

sprintf(emailedlist,"%s/emailed-list.txt",log_dir);
//Need to do following to get detials from experiment
GETCURDATA
FETCHPAR("PULPROG", &pul)
FETCHPAR("NUC1",nuc1)

/* remove comment to do default processing of experiment before emailing
FETCHPAR("AUNMP", &orig_au);
FETCHPAR("USERP5", &proc_au);
STOREPAR("AUNMP", proc_au) ;
CPR_exec(proc_au, WAIT_TERM); //the processing may be time consuming...better wait for it to finish
STOREPAR("AUNMP",orig_au);
*/

FETCHPAR("USERP1",email)
/*email[strlen(email)-1]=NULL; needed to strip last char from string*/

STOREPAR("USERP3", status1)
if (strchr(email,'@') == NULL)
{
	Proc_err(INFO_OPT, "No email address found");
	ABORT
}

/*make up a batfile with commands to zip up the data, then run the batch file*/
sprintf( zip_cmd_str, "robocopy  %s%s\\%s /S %s%s",disk,user,name,zip_dir,name);
sprintf( batfile, "%s\\%s", log_dir,batcmd);
fbat = fopen(batfile, "w");
fputs( zip_cmd_str, fbat);
fclose( fbat);
//now write a RETURN onto the batfile
sprintf(zip_cmd_str,"\r\n");
fbat = fopen(batfile, "a");
fputs( zip_cmd_str, fbat);
fclose( fbat);
sprintf( zip_name, "%s\%s.zip", zip_dir ,name);
//now make the command to zip the file using z7a, with password if type as command option
if (i_argc ==3){
	sprintf( zip_cmd_str, "7za a  %s %s%s -r -x!1r -x!1i -x!2rr -x!2ir -x!2ri -x!2ii -p%s",zip_name, zip_dir,name,zip_password);
	}
else
	{ sprintf( zip_cmd_str, "7za a  %s %s%s -r -x!1r -x!1i -x!2rr -x!2ir -x!2ri -x!2ii",zip_name, zip_dir,name);
	}

fbat = fopen(batfile, "a");
fputs( zip_cmd_str, fbat);
fclose( fbat);
//made the bat file, now run it.
system(batfile);
//Ok, made the zip file, now to email it using sendemail
/*Stage 1	*/ 
/*now get first pdf of dataset*/
/*better check there is data there, or we'll infinite loop*/

/*now get first pdf of dataset*/
/*better check there is data there, or we'll infinite loop*/
(void) sprintf(directory, "%s%s/%s", disk, user, name);
i_limit = gethighest(directory);
if (i_limit>999) i_limit=999;
while (i_exp < i_limit)
{
	/*make a name of the syntax created by service-pdfit */
	sprintf( pdfname, "%s%s/%s/%d/pdata/%d/%s-%s-%s-%d.pdf",disk, user, name, i_exp, procno, name, pul, nuc1, suffix);
	if( access( pdfname, R_OK ) == 0 ) // if there is a pdf there
		{															
		pdfthere=1;	
		break;
		}
	i_exp++;
}

/*Now email the zip, and the pdf if there is one.*/
/*first create the sendemail command we're going to run*/
if (pdfthere==1) { 
	sprintf (email_cmd_str, "sendemail -f %s -t %s -u %s -m %s -a  %s %s -s smtp.gmail.com:587 -o tls=yes -xu %s -xp %s", user_id, email,name, body, zip_name, pdfname, user_id, password);
}
else	{
	sprintf (email_cmd_str, "sendemail -f %s -t %s -u %s -m %s -a %s -s smtp.gmail.com:587 -o tls=yes -xu %s -xp %s", user_id, email,name, body, zip_name, user_id, password);
}

/*write a dos batch file with the cmd_str and run it*/
fbat = fopen(batfile, "w");
fputs( email_cmd_str, fbat);
fclose( fbat);
Show_status(email_cmd_str);

/*send the email*/
system(batfile);


/*append the email address sent to and filename to a statusfile*/
statusprint = fopen(emailedlist, "a");
static const char *CurrentTime(void)
{
    time_t clock;
    (void) time(&clock);
    return ctime(&clock);
}
sprintf(status_string, "%s,%s,%s\r\n", email,name,CurrentTime());
fputs( status_string, statusprint);
fclose(statusprint);

//if verbose, display info on what happened
Proc_err(INFO_OPT,"user_id is :- %s",user_id);
Proc_err(INFO_OPT,"password is :- %s",password);
Proc_err(INFO_OPT,"log_dir is :- %s",log_dir);
Proc_err(INFO_OPT,"zip_dir is :- %s",zip_dir);
Proc_err(INFO_OPT,"parsed defaults file");
Proc_err(INFO_OPT,"zip_password is :- %s",zip_password);
Proc_err(INFO_OPT, "batfile is :- %s", batfile);
Proc_err(INFO_OPT, "zip_name is :- %s", zip_name);
Proc_err(INFO_OPT,"zip_cmd_str is :- %s", zip_cmd_str);
Proc_err(INFO_OPT,"pdfname is :- %s, pdf there is- %i",pdfname,pdfthere);
Proc_err(INFO_OPT,"email_cmd_str is :- %s", email_cmd_str);
QUIT
