/* ========================================================================== */
/*
title:	as_iproc1droesy
author:	Sean Lynn
description:	autoprocesses selrogp experiments
              	using freqlist called by spectrum name, create pdf and archive data.
/*
/* ========================================================================== */

//standard pdf variables
char pdf_Name[PATH_MAX] = "";
char szFileStatus[20] = "";
char szTypeOfData[20] = "";
char cmdstr[200] = "";
//frequency loop variables
int	first_expno,nfreq, i_freq;
float	o1[100], spoff2;
double	sfo1,bf2, o1h;
char	path[100];
FILE	*fpFreqlist;
//peak picking variables
int cur_expno;
float Hsr;
char procnoPath[100] = "";

GETCURDATA

first_expno=expno;

FETCHPAR("O1", &o1h)

//read freqlist called name into o1 array, count points

(void) sprintf(path,"%s/lists/f1/%s",getstan(0,0), name);
fpFreqlist=fopen(path,"r");
if( fpFreqlist==NULL )
  {	
  Proc_err(0,"Frequency list not found.\n\nProgram aborted.");
	STOP
  }
nfreq=0;
fscanf( fpFreqlist,"%*s %lf",&bf2 );
while( fscanf(fpFreqlist,"%f",&o1[nfreq]) != EOF ) nfreq++;
fclose( fpFreqlist );

//step through datasets and process

i_freq=0;
//USELASTPARS
while( expno < (first_expno + nfreq) )
 {
 
 DATASET( name, expno, procno, disk, user )
 //process data
 cur_expno = expno;
 DATASET(name,10,1,disk,user)
 FETCHPAR("SR", &Hsr)

 DATASET(name,cur_expno,1,disk,user)
 STOREPAR("SR",Hsr)
 EFP
 APKS
 XAU("as_phasenoe")
 XAU("as_spoff2title")
 
 STOREPAR("CY",3.0)
 DATASET2(name,10,1,disk,user)

 //plot and create pdf in archive
 //AUTOPLOT
 GetPdfFilePath( pdf_Name, szFileStatus );
 AUTOPLOT_TO_FILE(pdf_Name)

 FETCHPAR("PULPROG", szTypeOfData)
 szTypeOfData[5]=NULL;
 UpdateWorkLog( szTypeOfData, pdf_Name, szFileStatus );
 //delete processed data
 sprintf( procnoPath, "%s/data/%s/nmr/%s/%d/pdata/%d", disk, user, name, expno, procno );
 i1 = unlinkpr( procnoPath );
 //set process program to not archive data
 STOREPAR("AUNMP", "as_proc1droesy")
 //archive data
 XAU("as_cp2archive")

 //regenerate processed data
 EFP
 
 expno++;
 i_freq++;
 }  

QUIT
#include "C:\Bruker\TOPSPIN\exp\stan\nmr\au\src\as_pdf_common.inc"
#include "C:\Bruker\TOPSPIN\exp\stan\nmr\au\src\as_sysutil.inc"